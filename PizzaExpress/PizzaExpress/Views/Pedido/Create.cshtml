@model PizzaExpress.Models.Pedido

@{
    ViewBag.Title = "Create";
}





@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
   <h3> Create</h3>
    <div class="form-horizontal">
        <h4>Pedido</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ObjPizza.Tamanho, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjPizza.Tamanho, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObjPizza.Tamanho, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ObjPizza.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjPizza.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObjPizza.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
           <label class="control-label col-md-2"> Sabor 1</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjPizza.Sabores[0].NomeSabor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.ObjPizza.Sabores[0].IdSabor)
                @Html.ValidationMessageFor(model => model.ObjPizza.Sabores[0].IdSabor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Sabor 2</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjPizza.Sabores[1].NomeSabor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.ObjPizza.Sabores[1].IdSabor)
                @Html.ValidationMessageFor(model => model.ObjPizza.Sabores[1].IdSabor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2"> Sabor 3</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjPizza.Sabores[2].NomeSabor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.ObjPizza.Sabores[2].IdSabor)
                @Html.ValidationMessageFor(model => model.ObjPizza.Sabores[2], "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Produto</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjProduto.NomeProduto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.ObjProduto.IdProduto)
                @Html.ValidationMessageFor(model => model.ObjProduto.NomeProduto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Cliente</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObjCliente.NomeCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.ObjCliente.IdCliente)
                @Html.ValidationMessageFor(model => model.ObjCliente.NomeCliente, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumPedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescPedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescPedido, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.DataPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataPedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatusPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StatusPedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StatusPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TipoPedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoPedido, "", new { @class = "text-danger" })
            </div>
        </div>
        
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


    
    @section scripts{
  
    @Scripts.Render("~/bundles/scripsdoprojeto")

  

    }
